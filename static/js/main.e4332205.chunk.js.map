{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/Loader/Loader.jsx","services/PixabayApi.js","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["Searchbar","state","value","handlerInput","e","setState","currentTarget","toLowerCase","handlerSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","src","alt","modalSrc","Button","onClick","modalRoot","document","querySelector","Modal","handleKeydown","code","onCloseModal","handleOnClickBackdrop","target","window","addEventListener","removeEventListener","forImageModal","createPortal","Spinner","color","height","width","timeout","PixabayFetchImages","page","per_page","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","images","isLoading","openModal","onClickHandler","prevState","onGalleryItemClick","imageForModal","dataset","modal","toggleModal","prevProps","searchQuery","hits","length","catch","finally","onScroll","scrollTo","top","documentElement","scrollHeight","behavior","map","item","webformatURL","tags","largeImageURL","id","App","onSubmitHandler","data","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e4332205.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n  handlerInput = e => {\r\n    this.setState({ value: e.currentTarget.value.toLowerCase() });\r\n  };\r\n  handlerSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.value.trim() === '') {\r\n      return toast.error('Please, enter search query!');\r\n    }\r\n    this.props.onSubmit(this.state.value);\r\n    this.setState({ value: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handlerSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handlerInput}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryItem({ src, alt, modalSrc }) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={alt}\r\n        data-modal={modalSrc}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  modalSrc: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeydown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeydown);\r\n  }\r\n  handleKeydown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n  handleOnClickBackdrop = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { forImageModal } = this.props;\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleOnClickBackdrop}>\r\n        <div className=\"Modal\">\r\n          <img src={forImageModal.src} alt={forImageModal.alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  forImageModal: PropTypes.object.isRequired,\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","const KEY = '22428506-9ce357bec79fea58fa453e43f';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default function PixabayFetchImages(value, page, per_page) {\r\n  return fetch(\r\n    `${BASE_URL}/?q=${value}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${per_page}`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error('This request is not successful'));\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Modal from '../Modal/Modal';\r\nimport Loader from '../Loader';\r\nimport PixabayFetchImages from '../../services/PixabayApi';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    page: 1,\r\n    per_page: 12,\r\n    images: [],\r\n    error: null,\r\n    isLoading: null,\r\n    openModal: false,\r\n  };\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { page, per_page } = this.state;\r\n    const { searchQuery } = this.props;\r\n    if (prevProps.searchQuery !== searchQuery) {\r\n      this.setState({ page: 1, isLoading: true });\r\n      PixabayFetchImages(searchQuery, page, per_page)\r\n        .then(response => {\r\n          if (response.hits.length > 0) {\r\n            this.setState({ images: response.hits });\r\n          } else toast.error('Enter another word for searching!');\r\n        })\r\n        .catch(error => this.setState({ error }))\r\n        .finally(() => this.setState({ isLoading: false }));\r\n    }\r\n\r\n    if (prevState.page !== page) {\r\n      this.setState({ isLoading: true });\r\n      PixabayFetchImages(searchQuery, page, per_page)\r\n        .then(response => {\r\n          if (response.hits.length > 0) {\r\n            this.setState(prevState => {\r\n              return { images: [...prevState.images, ...response.hits] };\r\n            });\r\n          } else toast.error('Enter another word for searching!');\r\n        })\r\n        .catch(error => this.setState({ error }))\r\n        .finally(() => this.setState({ isLoading: false }));\r\n    }\r\n    this.onScroll();\r\n  }\r\n\r\n  onClickHandler = e => {\r\n    this.setState(prevState => {\r\n      return { page: prevState.page + 1 };\r\n    });\r\n  };\r\n\r\n  onScroll() {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  }\r\n  onGalleryItemClick = e => {\r\n    this.setState({\r\n      openModal: true,\r\n      imageForModal: {\r\n        src: e.target.dataset.modal,\r\n        alt: e.target.alt,\r\n      },\r\n    });\r\n  };\r\n  toggleModal = () => {\r\n    this.setState(({ openModal }) => ({\r\n      openModal: !openModal,\r\n    }));\r\n  };\r\n  render() {\r\n    const { isLoading, images, imageForModal, openModal } = this.state;\r\n    const { onGalleryItemClick, onClickHandler, toggleModal } = this;\r\n    return (\r\n      <div className=\"gallery-container\">\r\n        {isLoading && <Loader />}\r\n        <ul className=\"ImageGallery\" onClick={onGalleryItemClick}>\r\n          {images.map(item => {\r\n            return (\r\n              <ImageGalleryItem\r\n                key={item.id}\r\n                src={item.webformatURL}\r\n                alt={item.tags}\r\n                modalSrc={item.largeImageURL}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        {images.length > 0 && <Button onClick={onClickHandler} />}\r\n        {openModal && (\r\n          <Modal forImageModal={imageForModal} onCloseModal={toggleModal} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  searchQuery: PropTypes.string.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport Searchbar from './Components/Searchbar';\r\nimport ImageGallery from './Components/ImageGallery';\r\n\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  onSubmitHandler = data => {\r\n    this.setState({ value: data });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onSubmitHandler} />\r\n        <ImageGallery searchQuery={value} />\r\n\r\n        <ToastContainer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}